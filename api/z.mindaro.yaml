name: bikesharing/api
# Default version when lacking other information
version: 1.0.0
# Default type when lacking other information
type: container
build:
  # Default build context is current directory
  context: .
  # Default build image from "TargetFramework" property in api.csproj
  image: dotnet:2.1-sdk-alpine
  # Default build commands due to existence of api.csproj
  commands:
  - dotnet build
  # Default build result is same as build context
  result: .
dependencies:
  bikes: bikesharing/bikes
  billing: bikesharing/billing
  notifications:
    type: bikesharing/notifications
    requirements:
      claims: [send]
  reservations: bikesharing/reservations
  users: bikesharing/users
environment:
  BIKES_ENDPOINT: $(bikes.endpoint)
  BILLING_ENDPOINT: $(billing.endpoint)
  NOTIFICATIONS_CONNECTION_STRING: $(notifications.connectionString)
  RESERVATIONS_ENDPOINT: $(reservations.endpoint)
  USERS_ENDPOINT: $(users.endpoint)
development:
  # Default image from "TargetFramework" property in api.csproj
  image: dotnet:2.1-sdk-alpine
  # Default workspace maps all files in source
  # directory to the target's working directory
  workspace:
  - "**:."
  environment:
    # Inferred due to reference to "Microsoft.AspNetCore.App" package
    ASPNETCORE_ENVIRONMENT: Development
  # Default command to run a .NET Core app for development
  command: dotnet run
  # Default refresh kills "dotnet" processes and re-runs command
  refresh:
    killProcesses: [dotnet]
release:
  build:
    # Default build context inherited from base configuration
    context: .
    # Default build image inherited from base configuration
    image: dotnet:2.1-sdk-alpine
    # Default build commands due to existence of api.csproj
    commands:
    - dotnet publish -c Release -o .publish
    # Default build result is based on default publish command
    result: .publish
  # Default image from "TargetFramework" property in api.csproj
  # and reference to "Microsoft.AspNetCore.App" package
  image: dotnet:2.1-aspnetcore-runtime-alpine
  # Default command to run a .NET Core app for release
  command: dotnet api.dll
